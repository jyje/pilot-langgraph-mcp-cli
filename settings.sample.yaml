# LangGraph 챗봇 설정 템플릿
# 이 파일을 settings.yaml로 복사하여 실제 API 키를 입력하세요

# OpenAI API 설정
openai:
  api_key: "your-openai-api-key-here"
  model: "gpt-4o-mini"
  temperature: 0.7
  max_tokens: 1000
  streaming: true  # 스트리밍 모드 활성화

# 챗봇 설정
chatbot:
  name: "LangGraph Assistant"
  welcome_message: "안녕하세요! LangGraph 챗봇입니다. 무엇을 도와드릴까요?"
  system_prompt: |
    당신은 도움이 되는 AI 어시스턴트입니다. 친절하고 정확한 답변을 제공해주세요. 사용자가 현재 시간이나 날짜를 물어보면 get_current_time 도구를 사용하여 정확한 시간 정보를 제공하세요.

    답변 형식 규칙:
    - 목록이나 항목을 나열할 때는 각 항목을 새 줄에 작성하세요
    - 헤더(###)나 중요한 섹션 앞뒤에는 빈 줄을 추가하세요
    - 긴 답변은 적절한 단락으로 나누어 가독성을 높이세요
    - 마크다운 형식을 사용할 때는 적절한 줄 나눔을 포함하세요

  # 로깅 설정 (loguru)
  logging:
    level: INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
    format: "\n<green>{time:HH:mm:ss}</green> | <level>{level: <5}</level> | <cyan>{name}</cyan> - <level>{message}</level>"
    file_enabled: false  # 파일 로깅 활성화 여부
    file_path: "logs/app.log"  # 로그 파일 경로
    rotation: "10 MB"  # 로그 파일 크기 제한
    retention: "10 days"  # 로그 파일 보관 기간
    compression: "zip"  # 로그 파일 압축 방식
    backtrace: true  # 에러 추적 활성화
    diagnose: true  # 상세 진단 정보 포함

# MCP 서버 설정 (HTTP 방식)
mcp_servers:
  - name: "example-server"
    url: "http://localhost:8000/mcp"
    enabled: true
    timeout: 30
    headers:
      Authorization: "Bearer your-token-here"
      Content-Type: "application/json"
  # - name: "another-server"
  #   url: "http://localhost:8001"
  #   enabled: false
  #   timeout: 60
  #   headers:
  #     X-API-Key: "your-api-key"

# 개발 모드 설정
development:
  debug: false
  verbose: false
